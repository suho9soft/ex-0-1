//SPI통신을 하기때문에 내장SPI라이브러리필요
#include <SPI.h>
//설치한 이더넷 라이브러리
#include <Ethernet2.h>

//인터넷공간에서 나의 아두이노의 고유한 식별자
//지금은 별로 필요한 녀석이 아님!
byte mac[] = {
  0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xED
};
//내 장치의 고유한 IP주소
IPAddress ip(172, 30, 1, 123);

//TCP서버의 포트번호가 몇인가?
//modbus tcp의 기본 포트번호
EthernetServer server(502);

//서버가 클라이언트로 일정한 간격으로 보내기위한 타이머 카운터
unsigned long send_t = 0;

void setup() {
  //아두이노의 내부 사정을 시리얼모니터에 출력하는 용도
  Serial.begin(9600);
  //Ethernet.init(CS핀번호)
  //상단에 mac주소와 ip주소로 공유기의 IP주소를 발급받는다!
  Ethernet.begin(mac, ip);
  //TCP서버 시작하기!
  server.begin();
  //공유기로부터 발급받은 IP주소를 시리얼모니터에 출력한다!
  //상단에 입력한 IP주소와 다른게 출력된다면 
  //1.중복이 되었거나
  //2.공유기가 발급해줄수없는 대역의 IP주소를 입력했거나
  //3.W5500을 연결을 잘못했거나
  Serial.print("server is at ");
  Serial.println(Ethernet.localIP());
}


void loop() {
  //서버가 클라이언트의 접속을 기다리는 부분
  EthernetClient client = server.available();

  //만약 대기중인 클라이언트가 없으면 아래 조건문은 거짓이다!
  if (client) {
    Serial.println("새로운 클라이언트 등장!");

    //무한루프를 돌리고 접속한 클라이언트가 접속을 종료하거나
    //혹은 강제로 접속이 끊어진경우 서버로 접속을 종료하고
    //대기열에있는 새로운 클라이언트의 접속을 허용한다
    while(client.connected()){
      //서버와 클라이언트가 접속을 한 상태에서 뭐할래?
      //서버가 1초간격으로 클라이언트에게 특정한 문자열을 전송한다!
      if(millis() - send_t > 1000){
        send_t = millis();
        //이부분이 1000밀리초마다 한번씩 조건이 걸림!
        char server_msg[] = "안녕하세요! 김수호입니다!\n";
        client.write(server_msg,sizeof(server_msg));
      }
      //클라이언트가 일정한 간격으로 보낸 데이터를 서버가 수신해서 시리얼모니터에 출력한다!
      if(client.available() > 0){
        //클라이언트가 서버쪽으로 뭔가를 전송했다!
        String data = client.readStringUntil('\n');
        if(data == "hello?"){
          //C#윈폼에서 접속을 했음을 알리는 명령
          Serial.println("C#윈폼에서 접속을 했습니다");
        }else{
          Serial.println(data);
        }
        
      }
    }
    //클라이언트가 접속을 종료한부분!
    client.stop();
    Serial.println("클라이언트와 접속이 해제됨!");
  }
}
